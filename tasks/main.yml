---
# Create a VM from a template
- name: create VM
  local_action:
    module: vmware_guest
    datacenter: "{{ vmw_datacenter }}"
    username: "{{ vmw_username }}"
    password: "{{ vmw_password }}"
    hostname: "{{ vmw_hostname }}"
    cluster: "{{ vmw_cluster }}"
    resource_pool: "{{ vmw_resourcepool|default(omit, true) }}"
    folder: "/{{ vmw_folder }}/{{ vmw_environment }}"
    name: "{{ vmw_environment }}-{{ vmw_name }}"
    template: "{{ vmw_template }}"
    state: poweredon
    guest_id: "{{ vmw_os_type }}"
    annotation: "{{ vmw_server_role }} - {{ vmw_environment }}"
    disk:
      - size_gb: "{{ vmw_disk_size }}"
        type: thin
        datastore: "{{ vmw_datastore }}"
    networks:
      - name: "{{ vmw_network }}"
#          ip: "{{ custom_ip }}"
#          vmw_netmask: "{{ netmask }}"
#          vmw_gateway: "{{ gateway }}"
#          dns_servers:
#          - "{{ vmw_dns_server1 }}"
#          - "{{ vmw_dns_server2 }}"
    hardware:
      memory_mb: "{{ vmw_mem }}"
      num_cpus: "{{ vmw_cpu }}"
#      customization:
#        dns_servers:
#        - "{{ dns_server1 }}"
#        - "{{ dns_server2 }}"
#        domain : "{{ domain }}"
#        hostname: "{{ environment }}-{{ instance_name }}"
    wait_for_ip_address: yes
  register: newvm

- debug: var=newvm

- name: Add instances to inventory
  local_action:
    module: add_host
    name: "{{ azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
    ansible_host: "{{ azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
    ansible_user: "{{ instance_ansible_user }}"
    ansible_port: "{{ instance_ansible_port }}"
    groups:
      - "vmw"
      - "{{ instance_role }}"
      - "{{ os_type }}"
  #         - "tag_Environment_{{ item.item.Environment }}"
